module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: [
    '@typescript-eslint/eslint-plugin',
    'destructuring',
    'import',
    'prettier',
    'jest',
  ],
  extends: [
    '@digtp/typescript',
    'plugin:prettier/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js', 'node_modules', 'dist', 'src/gql'],
  overrides: [
    {
      files: ['**'],
      plugins: ['jest'],
      rules: {
        '@typescript-eslint/unbound-method': 'off',
        'jest/unbound-method': 'error',
      },
    },
  ],
  rules: {
    'import/prefer-default-export': 'off',
    'no-void': 'off',
    'consistent-return': 'off',
    'no-restricted-syntax': 'off',
    'no-plusplus': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-argument': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/require-await': 'off',
    '@typescript-eslint/naming-convention': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    'class-methods-use-this': 'off',
    'default-case': 'off',
    'no-underscore-dangle': 'off',
    'new-cap': 'off',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/no-shadow': 'off',
    '@typescript-eslint/lines-between-class-members': 'off',
    'prefer-template': 'off',
    'max-classes-per-file': 'off',
    'no-param-reassign': 'off',
    'import/no-useless-path-segments': 'off',
    'no-restricted-properties': 'off',
    'prefer-exponentiation-operator': 'off',
    'no-await-in-loop': 'off',
    'object-shorthand': 'off',
    '@typescript-eslint/no-misused-promises': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    'no-continue': 'off',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: true,
        optionalDependencies: false,
        peerDependencies: false,
      },
    ],
    eqeqeq: 'error',
    curly: 'error',
    'no-lone-blocks': 'error',
    'no-undefined': 'error',
    'no-bitwise': 'warn',
    'no-useless-concat': 'error',
    'no-useless-return': 'error',
    'no-lonely-if': 'warn',
    'no-else-return': ['error', { allowElseIf: false }],
    'no-self-compare': 'error',
    'no-throw-literal': 'error',
    'no-nested-ternary': 'error',
    'no-new-object': 'error',
    'no-unneeded-ternary': 'error',
    'no-return-await': 'error',
    camelcase: [
      'error',
      {
        ignoreDestructuring: true,
        ignoreGlobals: true,
        properties: 'never',
        allow: ["^MESSAGE_TOPIC_"],
      },
    ],
    'spaced-comment': ['error', 'always'],
    'arrow-body-style': ['error', 'as-needed'],
    'guard-for-in': 'error',
    'destructuring/in-methods-params': 'error',
    'destructuring/in-params': [
      'error',
      {
        'max-params': 2,
      },
    ],
    'newline-before-return': 'error',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/explicit-member-accessibility': [
      'error',
      {
        accessibility: 'explicit',
        overrides: {
          accessors: 'explicit',
          constructors: 'no-public',
          methods: 'explicit',
          properties: 'off',
          parameterProperties: 'explicit',
        },
      },
    ],
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-useless-constructor': 'off',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/explicit-function-return-type': [
      'error',
      {
        allowExpressions: true,
      },
    ],
    '@typescript-eslint/no-empty-interface': [
      'error',
      {
        allowSingleExtends: true,
      },
    ],
    '@typescript-eslint/ban-ts-comment': [
      'error',
      {
        'ts-ignore': 'allow-with-description',
        minimumDescriptionLength: 5,
      },
    ],
    '@typescript-eslint/no-unused-vars': [
      'error',
      { argsIgnorePattern: '^_', varsIgnorePattern: '^_$' },
    ],
  },
};
